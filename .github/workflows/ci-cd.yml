name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Install Node.js (v18)
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # 3. Install Infisical CLI
      - name: Install Infisical CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y curl gnupg
          curl -1sLf 'https://dl.cloudsmith.io/public/infisical/infisical-cli/setup.deb.sh' | sudo -E bash
          sudo apt-get install -y infisical

      # 4. Inject secrets from Infisical (for printing/debugging only)
      - name: Inject secrets from Infisical
        run: |
          infisical run --token ${{ secrets.INFISICAL_TOKEN }} --env development -- printenv | grep -iE 'SONAR_TOKEN|SONAR_PROJECT_KEY|SONAR_ORGANIZATION|SNYK_TOKEN|DOCKER_USERNAME'

      # 5. SonarCloud Scan using Infisical
      - name: SonarCloud Scan via Infisical
        run: |
          infisical run --token ${{ secrets.INFISICAL_TOKEN }} --env development -- bash -c '
            docker run --rm \
              -e SONAR_TOKEN="$SONAR_TOKEN" \
              -e SONAR_PROJECT_KEY="$SONAR_PROJECT_KEY" \
              -e SONAR_ORGANIZATION="$SONAR_ORGANIZATION" \
              -v "$PWD:/usr/src" \
              sonarsource/sonar-scanner-cli \
              -Dsonar.projectKey=$SONAR_PROJECT_KEY \
              -Dsonar.organization=$SONAR_ORGANIZATION \
              -Dsonar.host.url=https://sonarcloud.io \
              -Dsonar.login=$SONAR_TOKEN
          '



      # 6. Build backend container
      - name: Build backend container
        run: docker build -t foodadvisor-backend:latest ./api

      # 7. Build frontend container
      - name: Build frontend container
        run: docker build -t foodadvisor-frontend:latest ./client

      # 8. Trivy scan backend
      - name: Trivy scan backend image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: foodadvisor-backend:latest
          format: table
          exit-code: 0
          ignore-unfixed: true

      # 9. Trivy scan frontend
      - name: Trivy scan frontend image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: foodadvisor-frontend:latest
          format: table
          exit-code: 0
          ignore-unfixed: true

      # 10. Set up Snyk CLI
      - name: Set up Snyk CLI
        uses: snyk/actions/setup@master

      # 11. Snyk scan backend
      - name: Snyk scan backend
        run: |
          infisical run --token ${{ secrets.INFISICAL_TOKEN }} --env development -- \
            snyk container test foodadvisor-backend:latest --file=./api/dockerfile --severity-threshold=high || true

      # 12. Snyk scan frontend
      - name: Snyk scan frontend
        run: |
          infisical run --token ${{ secrets.INFISICAL_TOKEN }} --env development -- \
            snyk container test foodadvisor-frontend:latest --file=./client/dockerfile --severity-threshold=high || true

      # 13. Docker Hub login
      - name: Docker Hub login
        run: |
          infisical run --token ${{ secrets.INFISICAL_TOKEN }} --env development -- \
            bash -c 'echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin'

      # 14. Push containers to registry
      - name: Push containers to Docker Hub
        run: |
          infisical run --token ${{ secrets.INFISICAL_TOKEN }} --env development -- bash -c '
            docker tag foodadvisor-backend:latest $DOCKER_USERNAME/foodadvisor-backend:latest
            docker push $DOCKER_USERNAME/foodadvisor-backend:latest
            docker tag foodadvisor-frontend:latest $DOCKER_USERNAME/foodadvisor-frontend:latest
            docker push $DOCKER_USERNAME/foodadvisor-frontend:latest
          '
