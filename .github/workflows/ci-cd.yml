name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  ci:
    name: Run CI
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18' # Change to your version

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Inject secrets from Infisical and export to GitHub Actions environment
      - name: Inject secrets from Infisical
        run: |
          infisical run --token ${{ secrets.INFISICAL_TOKEN }} --env development -- bash -c '
            echo "SONAR_TOKEN=$(printenv SONAR_TOKEN)" >> $GITHUB_ENV
            echo "SONAR_PROJECT_KEY=$(printenv SONAR_PROJECT_KEY)" >> $GITHUB_ENV
            echo "SONAR_ORGANIZATION=$(printenv SONAR_ORGANIZATION)" >> $GITHUB_ENV
            echo "SNYK_TOKEN=$(printenv SNYK_TOKEN)" >> $GITHUB_ENV
          '

      # Step 5: Run SonarCloud scan
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          args: >
            -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ env.SONAR_ORGANIZATION }}
        env:
          SONAR_TOKEN: ${{ env.SONAR_TOKEN }}

      # Step 6: Authenticate with Snyk
      - name: Authenticate Snyk
        run: npx snyk auth ${{ env.SNYK_TOKEN }}

      # Step 7: Run Snyk for open source vulnerability scanning
      - name: Run Snyk to check for vulnerabilities
        run: npx snyk test

      # (Optional) Step 8: Monitor project with Snyk
      - name: Monitor project with Snyk
        run: npx snyk monitor
 
      # 4.4.1 Log in to Docker Hub
      - name: Docker Hub login
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | \
            docker login --username "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # 4.4.2 Tag and push both images
      - name: Push containers to registry
        run: |
        
          docker tag foodadvisor-backend:latest \
            ${{ secrets.DOCKER_USERNAME }}/foodadvisor-backend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/foodadvisor-backend:latest
          docker tag foodadvisor-frontend:latest \
            ${{ secrets.DOCKER_USERNAME }}/foodadvisor-frontend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/foodadvisor-frontend:latest
